const express = require("express");
const dotenv = require("dotenv");
const nunjucks = require("nunjucks");
const path = require("path");
const router = require("./routers/router");
const cors = require("cors");

const app = express();
dotenv.config();

app.set("port", process.env.PORT || 8081);
app.set("view engine", "html");



////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////// nunjucks configure
nunjucks.configure("htmldir", {
    express: app,
    watch: true
})

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////// html 파일들에서 정적 파일들 불러오는 위치 설정
app.use(cors());
app.use("/", express.static(path.join(__dirname, "public")));
app.use(express.json());
app.use(express.urlencoded({ extended: false}));

app.use("/", router);


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////// 에러처리
// app.use((req, res, next) => {
//     const error = new Error("에러입니다.");
//     error.state = 404;
//     next(error);
// })

// app.use((err, req, res, next) => {
//     console.log("에러입니다2.");
// })

app.use((req, res, next)=>{
    const error = new Error(`${req.method} ${req.url} 라우터가 없습니다.`);
    error.status = 404;
    next(error);
});
app.use((err, req, res, next)=>{
    res.locals.message = err.message;
    res.locals.error = process.env.NODE_ENV !== 'production' ? err : {};
    res.status(err.status || 500);
    res.render('error');
});


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////// LISTEN
app.listen(app.get("port"), () => {
    console.log(app.get("port") + "포트 열림");
})